// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Talos.Client
{
    public static class Configuration
    {
        /// <summary>
        /// Generate client configuration for a Talos cluster
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Talos = Pulumi.Talos;
        /// using Talos = Pulumiverse.Talos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var thisSecrets = new Talos.Machine.Secrets("thisSecrets");
        /// 
        ///     var thisConfiguration = Talos.Client.Configuration.Invoke(new()
        ///     {
        ///         ClusterName = "example-cluster",
        ///         ClientConfiguration = thisSecrets.ClientConfiguration,
        ///         Nodes = new[]
        ///         {
        ///             "10.5.0.2",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<ConfigurationResult> InvokeAsync(ConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ConfigurationResult>("talos:client/configuration:Configuration", args ?? new ConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Generate client configuration for a Talos cluster
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Talos = Pulumi.Talos;
        /// using Talos = Pulumiverse.Talos;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var thisSecrets = new Talos.Machine.Secrets("thisSecrets");
        /// 
        ///     var thisConfiguration = Talos.Client.Configuration.Invoke(new()
        ///     {
        ///         ClusterName = "example-cluster",
        ///         ClientConfiguration = thisSecrets.ClientConfiguration,
        ///         Nodes = new[]
        ///         {
        ///             "10.5.0.2",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<ConfigurationResult> Invoke(ConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ConfigurationResult>("talos:client/configuration:Configuration", args ?? new ConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class ConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The client configuration data
        /// </summary>
        [Input("clientConfiguration", required: true)]
        public Inputs.ConfigurationClientConfigurationArgs ClientConfiguration { get; set; } = null!;

        /// <summary>
        /// The name of the cluster in the generated config
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        [Input("endpoints")]
        private List<string>? _endpoints;

        /// <summary>
        /// endpoints to set in the generated config
        /// </summary>
        public List<string> Endpoints
        {
            get => _endpoints ?? (_endpoints = new List<string>());
            set => _endpoints = value;
        }

        [Input("nodes")]
        private List<string>? _nodes;

        /// <summary>
        /// nodes to set in the generated config
        /// </summary>
        public List<string> Nodes
        {
            get => _nodes ?? (_nodes = new List<string>());
            set => _nodes = value;
        }

        public ConfigurationArgs()
        {
        }
        public static new ConfigurationArgs Empty => new ConfigurationArgs();
    }

    public sealed class ConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The client configuration data
        /// </summary>
        [Input("clientConfiguration", required: true)]
        public Input<Inputs.ConfigurationClientConfigurationInputArgs> ClientConfiguration { get; set; } = null!;

        /// <summary>
        /// The name of the cluster in the generated config
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        [Input("endpoints")]
        private InputList<string>? _endpoints;

        /// <summary>
        /// endpoints to set in the generated config
        /// </summary>
        public InputList<string> Endpoints
        {
            get => _endpoints ?? (_endpoints = new InputList<string>());
            set => _endpoints = value;
        }

        [Input("nodes")]
        private InputList<string>? _nodes;

        /// <summary>
        /// nodes to set in the generated config
        /// </summary>
        public InputList<string> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<string>());
            set => _nodes = value;
        }

        public ConfigurationInvokeArgs()
        {
        }
        public static new ConfigurationInvokeArgs Empty => new ConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class ConfigurationResult
    {
        /// <summary>
        /// The client configuration data
        /// </summary>
        public readonly Outputs.ConfigurationClientConfigurationResult ClientConfiguration;
        /// <summary>
        /// The name of the cluster in the generated config
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// endpoints to set in the generated config
        /// </summary>
        public readonly ImmutableArray<string> Endpoints;
        /// <summary>
        /// The ID of this resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// nodes to set in the generated config
        /// </summary>
        public readonly ImmutableArray<string> Nodes;
        /// <summary>
        /// The generated client configuration
        /// </summary>
        public readonly string TalosConfig;

        [OutputConstructor]
        private ConfigurationResult(
            Outputs.ConfigurationClientConfigurationResult clientConfiguration,

            string clusterName,

            ImmutableArray<string> endpoints,

            string id,

            ImmutableArray<string> nodes,

            string talosConfig)
        {
            ClientConfiguration = clientConfiguration;
            ClusterName = clusterName;
            Endpoints = endpoints;
            Id = id;
            Nodes = nodes;
            TalosConfig = talosConfig;
        }
    }
}
